"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —Ç–µ—Å—Ç–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏.
"""

import mysql.connector
import random
from werkzeug.security import generate_password_hash
from datetime import datetime, timedelta

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
db_config = {
    'host': 'localhost',
    'user': 'root',
    'password': 'SQL1610@slava',
    'database': 'book_exchange'
}

# –°–ø–∏—Å–æ–∫ —Ä–µ–≥—ñ–æ–Ω—ñ–≤ –£–∫—Ä–∞—ó–Ω–∏
regions = ["–ö–∏—ó–≤", "–õ—å–≤—ñ–≤", "–û–¥–µ—Å–∞", "–•–∞—Ä–∫—ñ–≤", "–î–Ω—ñ–ø—Ä–æ", "–ó–∞–ø–æ—Ä—ñ–∂–∂—è", "–†—ñ–≤–Ω–µ", "–ú–∏–∫–æ–ª–∞—ó–≤", "–•–º–µ–ª—å–Ω–∏—Ü—å–∫–∏–π", "–õ—É—Ü—å–∫"]

# –°–ø–∏—Å–æ–∫ –µ–º–æ–¥–∑—ñ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–∫
avatars = ["üë®", "üë©", "üßë", "üë¶", "üëß", "üë®‚Äçü¶∞", "üë©‚Äçü¶∞", "üë®‚Äçü¶±", "üë©‚Äçü¶±", "üë®‚Äçü¶≤",
           "üë©‚Äçü¶≤", "üë®‚Äçü¶≥", "üë©‚Äçü¶≥", "üßî", "üßë‚Äçü¶∞", "üßë‚Äçü¶±", "üßë‚Äçü¶≤", "üßë‚Äçü¶≥"]

# –î–∞–Ω—ñ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
users_data = [
    {"username": "book_lover", "email": "book_lover@example.com", "password": "password1",
     "full_name": "–Ü–≤–∞–Ω –ü–µ—Ç—Ä–µ–Ω–∫–æ", "phone_number": "+380991234567"},
    {"username": "reader2022", "email": "reader2022@example.com", "password": "password2",
     "full_name": "–ú–∞—Ä—ñ—è –ö–æ–≤–∞–ª–µ–Ω–∫–æ", "phone_number": "+380992234567"},
    {"username": "lit_fan", "email": "lit_fan@example.com", "password": "password3",
     "full_name": "–û–ª–µ–≥ –°–∏–¥–æ—Ä–µ–Ω–∫–æ", "phone_number": "+380993234567"},
    {"username": "bookworm", "email": "bookworm@example.com", "password": "password4",
     "full_name": "–ê–Ω–Ω–∞ –®–µ–≤—á–µ–Ω–∫–æ", "phone_number": "+380994234567"},
    {"username": "page_turner", "email": "page_turner@example.com", "password": "password5",
     "full_name": "–í—ñ–∫—Ç–æ—Ä –ú–µ–ª—å–Ω–∏–∫", "phone_number": "+380995234567"},
    {"username": "novel_reader", "email": "novel_reader@example.com", "password": "password6",
     "full_name": "–ù–∞—Ç–∞–ª—ñ—è –ë–æ–Ω–¥–∞—Ä–µ–Ω–∫–æ", "phone_number": "+380996234567"},
    {"username": "story_lover", "email": "story_lover@example.com", "password": "password7",
     "full_name": "–ê–Ω–¥—Ä—ñ–π –ö—Ä–∞–≤—á–µ–Ω–∫–æ", "phone_number": "+380997234567"},
    {"username": "ukr_books", "email": "ukr_books@example.com", "password": "password8",
     "full_name": "–°–æ—Ñ—ñ—è –¢–∫–∞—á–µ–Ω–∫–æ", "phone_number": "+380998234567"},
    {"username": "lit_master", "email": "lit_master@example.com", "password": "password9",
     "full_name": "–ú–∞–∫—Å–∏–º –õ–∏—Å–µ–Ω–∫–æ", "phone_number": "+380999234567"},
    {"username": "poetry_fan", "email": "poetry_fan@example.com", "password": "password10",
     "full_name": "–Æ–ª—ñ—è –ü–æ–ø–æ–≤–∏—á", "phone_number": "+380990234567"},
    {"username": "classic_reader", "email": "classic_reader@example.com", "password": "password11",
     "full_name": "–î–º–∏—Ç—Ä–æ –°–∞–≤—á–µ–Ω–∫–æ", "phone_number": "+380991134567"},
    {"username": "book_collector", "email": "book_collector@example.com", "password": "password12",
     "full_name": "–û–ª–µ–Ω–∞ –ì—Ä–∏–≥–æ—Ä–µ–Ω–∫–æ", "phone_number": "+380992134567"},
    {"username": "fantasy_reader", "email": "fantasy_reader@example.com", "password": "password13",
     "full_name": "–Ü–≥–æ—Ä –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ", "phone_number": "+380993134567"},
    {"username": "sci_fi_lover", "email": "sci_fi_lover@example.com", "password": "password14",
     "full_name": "–í–∞–ª–µ–Ω—Ç–∏–Ω–∞ –†–æ–º–∞–Ω–µ–Ω–∫–æ", "phone_number": "+380994134567"},
    {"username": "history_buff", "email": "history_buff@example.com", "password": "password15",
     "full_name": "–°–µ—Ä–≥—ñ–π –ü–∞–≤–ª–µ–Ω–∫–æ", "phone_number": "+380995134567"}
]

# –î–∞–Ω—ñ –¥–ª—è –∫–Ω–∏–≥
books_data = [
    {"title": "–ö–æ–±–∑–∞—Ä", "author": "–¢–∞—Ä–∞—Å –®–µ–≤—á–µ–Ω–∫–æ", "genre_id": 11,
     "description": "–ó–±—ñ—Ä–∫–∞ –ø–æ–µ—Ç–∏—á–Ω–∏—Ö —Ç–≤–æ—Ä—ñ–≤ –¢–∞—Ä–∞—Å–∞ –®–µ–≤—á–µ–Ω–∫–∞."},
    {"title": "–õ—ñ—Å–æ–≤–∞ –ø—ñ—Å–Ω—è", "author": "–õ–µ—Å—è –£–∫—Ä–∞—ó–Ω–∫–∞", "genre_id": 12,
     "description": "–î—Ä–∞–º–∞-—Ñ–µ—î—Ä—ñ—è –ø—Ä–æ –∫–æ—Ö–∞–Ω–Ω—è –º—ñ–∂ –ª—ñ—Å–æ–≤–æ—é –º—ñ—Ñ—ñ—á–Ω–æ—é —ñ—Å—Ç–æ—Ç–æ—é —ñ –ª—é–¥–∏–Ω–æ—é."},
    {"title": "–ó—ñ–≤'—è–ª–µ –ª–∏—Å—Ç—è", "author": "–Ü–≤–∞–Ω –§—Ä–∞–Ω–∫–æ", "genre_id": 11,
     "description": "–ó–±—ñ—Ä–∫–∞ –ª—ñ—Ä–∏—á–Ω–∏—Ö –ø–æ–µ–∑—ñ–π –ø—Ä–æ –Ω–µ—â–∞—Å–ª–∏–≤–µ –∫–æ—Ö–∞–Ω–Ω—è."},
    {"title": "–¢–æ—Ä–µ–∞–¥–æ—Ä–∏ –∑ –í–∞—Å—é–∫—ñ–≤–∫–∏", "author": "–í—Å–µ–≤–æ–ª–æ–¥ –ù–µ—Å—Ç–∞–π–∫–æ", "genre_id": 13,
     "description": "–ü—Ä–∏–≥–æ–¥–∏ –¥–≤–æ—Ö –¥—Ä—É–∑—ñ–≤-–ø—ñ–¥–ª—ñ—Ç–∫—ñ–≤ –∑ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ —Å–µ–ª–∞."},
    {"title": "–ó–µ–º–ª—è", "author": "–û–ª—å–≥–∞ –ö–æ–±–∏–ª—è–Ω—Å—å–∫–∞", "genre_id": 5,
     "description": "–°–æ—Ü—ñ–∞–ª—å–Ω–æ-–ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–∞ –ø–æ–≤—ñ—Å—Ç—å –ø—Ä–æ —Ç—Ä–∞–≥–µ–¥—ñ—é —Å–µ–ª—è–Ω—Å—å–∫–æ—ó —Ä–æ–¥–∏–Ω–∏."},
    {"title": "–ß–æ—Ä–Ω–∞ —Ä–∞–¥–∞", "author": "–ü–∞–Ω—Ç–µ–ª–µ–π–º–æ–Ω –ö—É–ª—ñ—à", "genre_id": 5,
     "description": "–Ü—Å—Ç–æ—Ä–∏—á–Ω–∏–π —Ä–æ–º–∞–Ω –ø—Ä–æ –ø–æ–¥—ñ—ó –≤ –£–∫—Ä–∞—ó–Ω—ñ –ø—ñ—Å–ª—è —Å–º–µ—Ä—Ç—ñ –ë–æ–≥–¥–∞–Ω–∞ –•–º–µ–ª—å–Ω–∏—Ü—å–∫–æ–≥–æ."},
    {"title": "–ú—ñ—Å—Ç–æ", "author": "–í–∞–ª–µ—Ä'—è–Ω –ü—ñ–¥–º–æ–≥–∏–ª—å–Ω–∏–π", "genre_id": 12,
     "description": "–†–æ–º–∞–Ω –ø—Ä–æ —Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –º–æ–ª–æ–¥–æ—ó –ª—é–¥–∏–Ω–∏ –≤ –º—ñ—Å—Ç—ñ."},
    {"title": "Intermezzo", "author": "–ú–∏—Ö–∞–π–ª–æ –ö–æ—Ü—é–±–∏–Ω—Å—å–∫–∏–π", "genre_id": 12,
     "description": "–ù–æ–≤–µ–ª–∞ –ø—Ä–æ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –¥—É—Ö–æ–≤–Ω–∏—Ö —Å–∏–ª –ª—é–¥–∏–Ω–∏ –Ω–∞ –ª–æ–Ω—ñ –ø—Ä–∏—Ä–æ–¥–∏."},
    {"title": "–ú–∏–Ω–∞ –ú–∞–∑–∞–π–ª–æ", "author": "–ú–∏–∫–æ–ª–∞ –ö—É–ª—ñ—à", "genre_id": 12,
     "description": "–ö–æ–º–µ–¥—ñ—è –ø—Ä–æ —É–∫—Ä–∞—ó–Ω—ñ–∑–∞—Ü—ñ—é —Ç–∞ —Å—Ç–∞–≤–ª–µ–Ω–Ω—è –¥–æ –Ω–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–Ω—è."},
    {"title": "1984", "author": "–î–∂–æ—Ä–¥–∂ –û—Ä–≤–µ–ª–ª", "genre_id": 1,
     "description": "–†–æ–º–∞–Ω-–∞–Ω—Ç–∏—É—Ç–æ–ø—ñ—è –ø—Ä–æ —Ç–æ—Ç–∞–ª—ñ—Ç–∞—Ä–Ω–µ —Å—É—Å–ø—ñ–ª—å—Å—Ç–≤–æ."},
    {"title": "–ì–∞—Ä—Ä—ñ –ü–æ—Ç—Ç–µ—Ä —ñ —Ñ—ñ–ª–æ—Å–æ—Ñ—Å—å–∫–∏–π –∫–∞–º—ñ–Ω—å", "author": "–î–∂. –ö. –†–æ—É–ª—ñ–Ω–≥", "genre_id": 2,
     "description": "–ü–µ—Ä—à–∞ –∫–Ω–∏–≥–∞ —Å–µ—Ä—ñ—ó –ø—Ä–æ —é–Ω–æ–≥–æ —á–∞—Ä—ñ–≤–Ω–∏–∫–∞."},
    {"title": "–í–æ–ª–æ–¥–∞—Ä –ø–µ—Ä—Å–Ω—ñ–≤", "author": "–î–∂. –†. –†. –¢–æ–ª–∫—ñ–Ω", "genre_id": 2,
     "description": "–ï–ø—ñ—á–Ω–∏–π —Ä–æ–º–∞–Ω —É –∂–∞–Ω—Ä—ñ —Ñ–µ–Ω—Ç–µ–∑—ñ."},
    {"title": "–ú–∞–π—Å—Ç–µ—Ä —ñ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞", "author": "–ú–∏—Ö–∞–π–ª–æ –ë—É–ª–≥–∞–∫–æ–≤", "genre_id": 12,
     "description": "–†–æ–º–∞–Ω –ø—Ä–æ –≤—ñ–∑–∏—Ç –¥–∏—è–≤–æ–ª–∞ –≤ –ú–æ—Å–∫–≤—É."},
    {"title": "–ó–ª–æ—á–∏–Ω —ñ –∫–∞—Ä–∞", "author": "–§–µ–¥—ñ—Ä –î–æ—Å—Ç–æ—î–≤—Å—å–∫–∏–π", "genre_id": 12,
     "description": "–ü—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–∏–π —Ä–æ–º–∞–Ω –ø—Ä–æ –º–æ—Ä–∞–ª—å–Ω—ñ –¥–∏–ª–µ–º–∏."},
    {"title": "–ú–∞–ª–µ–Ω—å–∫–∏–π –ø—Ä–∏–Ω—Ü", "author": "–ê–Ω—Ç—É–∞–Ω –¥–µ –°–µ–Ω—Ç-–ï–∫–∑—é–ø–µ—Ä—ñ", "genre_id": 13,
     "description": "–§—ñ–ª–æ—Å–æ—Ñ—Å—å–∫–∞ –∫–∞–∑–∫–∞ –¥–ª—è –¥—ñ—Ç–µ–π —ñ –¥–æ—Ä–æ—Å–ª–∏—Ö."},
    {"title": "–°—Ç–æ —Ä–æ–∫—ñ–≤ —Å–∞–º–æ—Ç–Ω–æ—Å—Ç—ñ", "author": "–ì–∞–±—Ä—ñ–µ–ª—å –ì–∞—Ä—Å—ñ—è –ú–∞—Ä–∫–µ—Å", "genre_id": 12,
     "description": "–†–æ–º–∞–Ω —É —Å—Ç–∏–ª—ñ –º–∞–≥—ñ—á–Ω–æ–≥–æ —Ä–µ–∞–ª—ñ–∑–º—É."},
    {"title": "–ì–æ—Ä–¥—ñ—Å—Ç—å —Ç–∞ —É–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è", "author": "–î–∂–µ–π–Ω –û—Å—Ç—ñ–Ω", "genre_id": 3,
     "description": "–†–æ–º–∞–Ω –ø—Ä–æ –∂–∏—Ç—Ç—è –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó –ø—Ä–æ–≤—ñ–Ω—Ü—ñ—ó –ø–æ—á–∞—Ç–∫—É XIX —Å—Ç–æ–ª—ñ—Ç—Ç—è."},
    {"title": "–•—ñ–±–∞ —Ä–µ–≤—É—Ç—å –≤–æ–ª–∏, —è–∫ —è—Å–ª–∞ –ø–æ–≤–Ω—ñ", "author": "–ü–∞–Ω–∞—Å –ú–∏—Ä–Ω–∏–π", "genre_id": 12,
     "description": "–°–æ—Ü—ñ–∞–ª—å–Ω–æ-–ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–∏–π —Ä–æ–º–∞–Ω –ø—Ä–æ –¥–æ–ª—é —Å–µ–ª—è–Ω–∏–Ω–∞."},
    {"title": "–¢—ñ–Ω—ñ –∑–∞–±—É—Ç–∏—Ö –ø—Ä–µ–¥–∫—ñ–≤", "author": "–ú–∏—Ö–∞–π–ª–æ –ö–æ—Ü—é–±–∏–Ω—Å—å–∫–∏–π", "genre_id": 12,
     "description": "–ü–æ–≤—ñ—Å—Ç—å –ø—Ä–æ –∫–æ—Ö–∞–Ω–Ω—è –Ω–∞ —Ç–ª—ñ –≥—É—Ü—É–ª—å—Å—å–∫–∏—Ö —Ç—Ä–∞–¥–∏—Ü—ñ–π."},
    {"title": "7 –∑–≤–∏—á–æ–∫ –Ω–∞–¥–∑–≤–∏—á–∞–π–Ω–æ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–∏—Ö –ª—é–¥–µ–π", "author": "–°—Ç—ñ–≤–µ–Ω –ö–æ–≤—ñ", "genre_id": 20,
     "description": "–ö–Ω–∏–≥–∞ –ø—Ä–æ –æ—Å–æ–±–∏—Å—Ç—ñ—Å–Ω–∏–π —Ä–æ–∑–≤–∏—Ç–æ–∫."},
    {"title": "Sapiens: –ö–æ—Ä–æ—Ç–∫–∞ —ñ—Å—Ç–æ—Ä—ñ—è –ª—é–¥—Å—Ç–≤–∞", "author": "–Æ–≤–∞–ª –ù–æ–π –•–∞—Ä–∞—Ä—ñ", "genre_id": 7,
     "description": "–ö–Ω–∏–≥–∞ –ø—Ä–æ –µ–≤–æ–ª—é—Ü—ñ—é –ª—é–¥—Å—Ç–≤–∞ –≤—ñ–¥ –¥–∞–≤–Ω—ñ—Ö —á–∞—Å—ñ–≤ –¥–æ —Å—å–æ–≥–æ–¥–µ–Ω–Ω—è."},
    {"title": "–ê—Ç–ª–∞–Ω—Ç —Ä–æ–∑–ø—Ä–∞–≤–∏–≤ –ø–ª–µ—á—ñ", "author": "–ê–π–Ω –†–µ–Ω–¥", "genre_id": 12,
     "description": "–§—ñ–ª–æ—Å–æ—Ñ—Å—å–∫–∏–π —Ä–æ–º–∞–Ω –ø—Ä–æ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—ñ–∑–º."},
    {"title": "–¢–∏—Ö–∏–π –î–æ–Ω", "author": "–ú–∏—Ö–∞–π–ª–æ –®–æ–ª–æ—Ö–æ–≤", "genre_id": 5,
     "description": "–†–æ–º–∞–Ω –ø—Ä–æ –∂–∏—Ç—Ç—è –¥–æ–Ω—Å—å–∫–∏—Ö –∫–æ–∑–∞–∫—ñ–≤."},
    {"title": "–í—ñ–π–Ω–∞ —ñ –º–∏—Ä", "author": "–õ–µ–≤ –¢–æ–ª—Å—Ç–æ–π", "genre_id": 5,
     "description": "–Ü—Å—Ç–æ—Ä–∏—á–Ω–∏–π —Ä–æ–º–∞–Ω –ø—Ä–æ –†–æ—Å—ñ—é –ø—ñ–¥ —á–∞—Å –Ω–∞–ø–æ–ª–µ–æ–Ω—ñ–≤—Å—å–∫–∏—Ö –≤—ñ–π–Ω."},
    {"title": "–Ü–¥—ñ–æ—Ç", "author": "–§–µ–¥—ñ—Ä –î–æ—Å—Ç–æ—î–≤—Å—å–∫–∏–π", "genre_id": 12,
     "description": "–†–æ–º–∞–Ω –ø—Ä–æ –¥–æ–±—Ä–æ–≥–æ —ñ —á–µ—Å–Ω–æ–≥–æ –∫–Ω—è–∑—è –ú–∏—à–∫—ñ–Ω–∞."},
    {"title": "–°–æ–±–∞—á–µ —Å–µ—Ä—Ü–µ", "author": "–ú–∏—Ö–∞–π–ª–æ –ë—É–ª–≥–∞–∫–æ–≤", "genre_id": 1,
     "description": "–°–∞—Ç–∏—Ä–∏—á–Ω–∞ –ø–æ–≤—ñ—Å—Ç—å –ø—Ä–æ –µ–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç –ø—Ä–æ—Ñ–µ—Å–æ—Ä–∞ –ü—Ä–µ–æ–±—Ä–∞–∂–µ–Ω—Å—å–∫–æ–≥–æ."},
    {"title": "–ú–∞—Ä—Å—ñ–∞–Ω–∏–Ω", "author": "–ï–Ω–¥—ñ –í–µ–π—Ä", "genre_id": 1,
     "description": "–†–æ–º–∞–Ω –ø—Ä–æ –∞—Å—Ç—Ä–æ–Ω–∞–≤—Ç–∞, —è–∫–æ–≥–æ –ø–æ–º–∏–ª–∫–æ–≤–æ –≤–≤–∞–∂–∞—é—Ç—å –∑–∞–≥–∏–±–ª–∏–º —ñ –∑–∞–ª–∏—à–∞—é—Ç—å –Ω–∞ –ú–∞—Ä—Å—ñ."},
    {"title": "–ó–µ–ª–µ–Ω—ñ –ø–∞–≥–æ—Ä–±–∏ –ê—Ñ—Ä–∏–∫–∏", "author": "–ï—Ä–Ω–µ—Å—Ç –•–µ–º—ñ–Ω–≥—É–µ–π", "genre_id": 7,
     "description": "–ù–µ—Ñ—ñ–∫—Ü—ñ–π–Ω–∞ –∫–Ω–∏–≥–∞ –ø—Ä–æ –∞—Ñ—Ä–∏–∫–∞–Ω—Å—å–∫–µ —Å–∞—Ñ–∞—Ä—ñ."},
    {"title": "–ú–∏—Å—Ç–µ—Ü—Ç–≤–æ –≤—ñ–π–Ω–∏", "author": "–°—É–Ω—å-–¶–∑–∏", "genre_id": 16,
     "description": "–î–∞–≤–Ω—å–æ–∫–∏—Ç–∞–π—Å—å–∫–∏–π —Ç—Ä–∞–∫—Ç–∞—Ç –ø—Ä–æ –≤—ñ–π—Å—å–∫–æ–≤—É —Å—Ç—Ä–∞—Ç–µ–≥—ñ—é."},
    {"title": "–î–∂–µ–π–Ω –ï–π—Ä", "author": "–®–∞—Ä–ª–æ—Ç—Ç–∞ –ë—Ä–æ–Ω—Ç–µ", "genre_id": 12,
     "description": "–†–æ–º–∞–Ω –ø—Ä–æ –∂–∏—Ç—Ç—è —ñ –∫–æ—Ö–∞–Ω–Ω—è —Å–∏—Ä–æ—Ç–∏ –î–∂–µ–π–Ω –ï–π—Ä."},
    {"title": "–ö–∞–º—ñ–Ω–Ω–∏–π —Ö—Ä–µ—Å—Ç", "author": "–í–∞—Å–∏–ª—å –°—Ç–µ—Ñ–∞–Ω–∏–∫", "genre_id": 12,
     "description": "–ó–±—ñ—Ä–∫–∞ –Ω–æ–≤–µ–ª –ø—Ä–æ –∂–∏—Ç—Ç—è –≥–∞–ª–∏—Ü—å–∫–æ–≥–æ —Å–µ–ª—è–Ω—Å—Ç–≤–∞."},
    {"title": "–•–º–µ–ª—å–Ω–∏—Ü—å–∫–∏–π", "author": "–Ü–≤–∞–Ω –ù–µ—á—É–π-–õ–µ–≤–∏—Ü—å–∫–∏–π", "genre_id": 5,
     "description": "–Ü—Å—Ç–æ—Ä–∏—á–Ω–∏–π —Ä–æ–º–∞–Ω –ø—Ä–æ –ë–æ–≥–¥–∞–Ω–∞ –•–º–µ–ª—å–Ω–∏—Ü—å–∫–æ–≥–æ."},
    {"title": "–î–∏–≤–æ", "author": "–ü–∞–≤–ª–æ –ó–∞–≥—Ä–µ–±–µ–ª—å–Ω–∏–π", "genre_id": 5,
     "description": "–†–æ–º–∞–Ω –ø—Ä–æ –±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ –°–æ—Ñ—ñ—ó–≤—Å—å–∫–æ–≥–æ —Å–æ–±–æ—Ä—É."},
    {"title": "–†–µ–∫—Ä–µ–∞—Ü—ñ—ó", "author": "–Æ—Ä—ñ–π –ê–Ω–¥—Ä—É—Ö–æ–≤–∏—á", "genre_id": 12,
     "description": "–ü–æ—Å—Ç–º–æ–¥–µ—Ä–Ω—ñ—Å—Ç—Å—å–∫–∏–π —Ä–æ–º–∞–Ω –ø—Ä–æ –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–Ω–∏–π —Ñ–µ—Å—Ç–∏–≤–∞–ª—å."},
    {"title": "–°–æ–ª–æ–¥–∫–∞ –î–∞—Ä—É—Å—è", "author": "–ú–∞—Ä—ñ—è –ú–∞—Ç—ñ–æ—Å", "genre_id": 12,
     "description": "–î—Ä–∞–º–∞ –ø—Ä–æ —Ç—Ä–∞–≥—ñ—á–Ω—É –¥–æ–ª—é –¥—ñ–≤—á–∏–Ω–∏ –≤ –±—É–∫–æ–≤–∏–Ω—Å—å–∫–æ–º—É —Å–µ–ª—ñ."},
    {"title": "–ß–æ—Ä–Ω–∏–π –≤–æ—Ä–æ–Ω", "author": "–í–∞—Å–∏–ª—å –®–∫–ª—è—Ä", "genre_id": 5,
     "description": "–Ü—Å—Ç–æ—Ä–∏—á–Ω–∏–π —Ä–æ–º–∞–Ω –ø—Ä–æ –ø–æ–≤—Å—Ç–∞–Ω—Å—å–∫–∏–π —Ä—É—Ö –≤ –£–∫—Ä–∞—ó–Ω—ñ 1920-—Ö —Ä–æ–∫—ñ–≤."},
    {"title": "–î—ñ–º –Ω–∞ –≥–æ—Ä—ñ", "author": "–í–∞–ª–µ—Ä—ñ–π –®–µ–≤—á—É–∫", "genre_id": 12,
     "description": "–†–æ–º–∞–Ω-–±–∞–ª–∞–¥–∞ –ø—Ä–æ —É–∫—Ä–∞—ó–Ω—Å—å–∫–µ –ø—Ä–æ–≤—ñ–Ω—Ü—ñ–π–Ω–µ –º—ñ—Å—Ç–æ."},
    {"title": "–õ–µ–±–µ–¥–∏–Ω–∞ –∑–≥—Ä–∞—è", "author": "–í–∞—Å–∏–ª—å –ó–µ–º–ª—è–∫", "genre_id": 12,
     "description": "–†–æ–º–∞–Ω –ø—Ä–æ –∂–∏—Ç—Ç—è —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ —Å–µ–ª–∞."},
    {"title": "–ü–æ–ª—å–æ–≤—ñ –¥–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è –∑ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ —Å–µ–∫—Å—É", "author": "–û–∫—Å–∞–Ω–∞ –ó–∞–±—É–∂–∫–æ", "genre_id": 12,
     "description": "–ê–≤—Ç–æ–±—ñ–æ–≥—Ä–∞—Ñ—ñ—á–Ω–∏–π —Ä–æ–º–∞–Ω-–µ—Å–µ."},
    {"title": "–ù–∞—Ü—ñ—è", "author": "–ú–∞—Ä—ñ—è –ú–∞—Ç—ñ–æ—Å", "genre_id": 12,
     "description": "–ó–±—ñ—Ä–∫–∞ –Ω–æ–≤–µ–ª –ø—Ä–æ –¥–æ–ª—é —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –Ω–∞—Ü—ñ—ó."},
    {"title": "–ó–∞–ø–∏—Å–∫–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ —Å–∞–º–∞—à–µ–¥—à–æ–≥–æ", "author": "–õ—ñ–Ω–∞ –ö–æ—Å—Ç–µ–Ω–∫–æ", "genre_id": 12,
     "description": "–†–æ–º–∞–Ω-—â–æ–¥–µ–Ω–Ω–∏–∫ —ñ–Ω—Ç–µ–ª—ñ–≥–µ–Ω—Ç–∞ —á–∞—Å—ñ–≤ –Ω–µ–∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ."},
    {"title": "–Ø, –ü–æ–±—î–¥–∞ —ñ –ë–µ—Ä–ª—ñ–Ω", "author": "–ö—É–∑—å–º–∞ –°–∫—Ä—è–±—ñ–Ω", "genre_id": 7,
     "description": "–ê–≤—Ç–æ–±—ñ–æ–≥—Ä–∞—Ñ—ñ—á–Ω–∞ –∫–Ω–∏–≥–∞ –ø—Ä–æ –ø–æ–¥–æ—Ä–æ–∂ –¥–æ –ù—ñ–º–µ—á—á–∏–Ω–∏."},
    {"title": "–ú—ñ—Å—Ç–æ", "author": "–í–∞–ª–µ—Ä'—è–Ω –ü—ñ–¥–º–æ–≥–∏–ª—å–Ω–∏–π", "genre_id": 12,
     "description": "–†–æ–º–∞–Ω –ø—Ä–æ –∂–∏—Ç—Ç—è –º–æ–ª–æ–¥–æ–≥–æ —Å—ñ–ª—å—Å—å–∫–æ–≥–æ —Ö–ª–æ–ø—Ü—è –≤ –ö–∏—î–≤—ñ."},
    {"title": "–í–µ—Ä—à–Ω–∏–∫–∏", "author": "–Æ—Ä—ñ–π –Ø–Ω–æ–≤—Å—å–∫–∏–π", "genre_id": 12,
     "description": "–†–æ–º–∞–Ω —É –Ω–æ–≤–µ–ª–∞—Ö –ø—Ä–æ –≥—Ä–æ–º–∞–¥—è–Ω—Å—å–∫—É –≤—ñ–π–Ω—É –≤ –£–∫—Ä–∞—ó–Ω—ñ."},
    {"title": "–õ—é–¥–∏–Ω–∞ –≤ –ø–æ—à—É–∫–∞—Ö —Å–ø—Ä–∞–≤–∂–Ω—å–æ–≥–æ —Å–µ–Ω—Å—É", "author": "–í—ñ–∫—Ç–æ—Ä –§—Ä–∞–Ω–∫–ª", "genre_id": 14,
     "description": "–ö–Ω–∏–≥–∞ –ø—Ä–æ –¥–æ—Å–≤—ñ–¥ –≤–∏–∂–∏–≤–∞–Ω–Ω—è –≤ –∫–æ–Ω—Ü—Ç–∞–±–æ—Ä—ñ —Ç–∞ –ø–æ—à—É–∫ —Å–µ–Ω—Å—É –∂–∏—Ç—Ç—è."},
    {"title": "–î—É–º–∞–π –ø–æ–≤—ñ–ª—å–Ω–æ... –≤–∏—Ä—ñ—à—É–π —à–≤–∏–¥–∫–æ", "author": "–î–µ–Ω—ñ–µ–ª –ö–∞–Ω–µ–º–∞–Ω", "genre_id": 14,
     "description": "–ö–Ω–∏–≥–∞ –ø—Ä–æ –¥–≤–∞ —Ç–∏–ø–∏ –º–∏—Å–ª–µ–Ω–Ω—è —Ç–∞ –ø—Ä–∏–π–Ω—è—Ç—Ç—è —Ä—ñ—à–µ–Ω—å."},
    {"title": "21 —É—Ä–æ–∫ –¥–ª—è 21 —Å—Ç–æ–ª—ñ—Ç—Ç—è", "author": "–Æ–≤–∞–ª –ù–æ–π –•–∞—Ä–∞—Ä—ñ", "genre_id": 6,
     "description": "–ö–Ω–∏–≥–∞ –ø—Ä–æ –≤–∏–∫–ª–∏–∫–∏ —Å—É—á–∞—Å–Ω–æ–≥–æ —Å–≤—ñ—Ç—É."}
]


# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
def connect_to_db():
    try:
        connection = mysql.connector.connect(**db_config)
        print("–ó'—î–¥–Ω–∞–Ω–Ω—è –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö —É—Å–ø—ñ—à–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        return connection
    except mysql.connector.Error as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö: {e}")
        return None


# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
def add_users(connection):
    cursor = connection.cursor()
    user_ids = []

    try:
        for user in users_data:
            # –î–æ–¥–∞—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π —Ä–µ–≥—ñ–æ–Ω —Ç–∞ –∞–≤–∞—Ç–∞—Ä–∫—É
            region = random.choice(regions)
            avatar_symbol = random.choice(avatars)

            # –•–µ—à—É–≤–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è
            hashed_password = generate_password_hash(user["password"])
            # –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç
            cursor.execute(
                """INSERT INTO users 
                   (username, email, password, full_name, phone_number, region, avatar_symbol) 
                   VALUES (%s, %s, %s, %s, %s, %s, %s)
                   ON DUPLICATE KEY UPDATE
                       password = VALUES(password),
                       full_name = VALUES(full_name),
                       phone_number = VALUES(phone_number),
                       region = VALUES(region),
                       avatar_symbol = VALUES(avatar_symbol)""",
                (user["username"], user["email"], hashed_password,
                 user["full_name"], user["phone_number"], region, avatar_symbol)
            )

            user_ids.append(cursor.lastrowid)

        connection.commit()
        print(f"–î–æ–¥–∞–Ω–æ {len(users_data)} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤")
        return user_ids
    except mysql.connector.Error as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {e}")
        connection.rollback()
        return []
    finally:
        cursor.close()


# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –∫–Ω–∏–≥
def add_books(connection, user_ids):
    cursor = connection.cursor()
    book_ids = []

    try:
        for book in books_data:
            # –û–±–∏—Ä–∞—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –≤–ª–∞—Å–Ω–∏–∫–∞
            owner_id = random.choice(user_ids)
            is_free = random.choice([True, False])

            status_options = ["–¥–æ—Å—Ç—É–ø–Ω–∞", "–¥–æ—Å—Ç—É–ø–Ω–∞", "–∑–∞—Ä–µ–∑–µ—Ä–≤–æ–≤–∞–Ω–∞"]
            status = random.choice(status_options)

            # –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç
            cursor.execute(
                """INSERT INTO books 
                   (title, author, description, genre_id, owner_id, is_free, status) 
                   VALUES (%s, %s, %s, %s, %s, %s, %s)""",
                (book["title"], book["author"], book["description"],
                 book["genre_id"], owner_id, is_free, status)
            )
            book_ids.append(cursor.lastrowid)

        connection.commit()
        print(f"–î–æ–¥–∞–Ω–æ {len(books_data)} –∫–Ω–∏–≥")
        return book_ids
    except mysql.connector.Error as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –∫–Ω–∏–≥: {e}")
        connection.rollback()
        return []
    finally:
        cursor.close()


# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤—ñ–¥–≥—É–∫—ñ–≤ –ø—Ä–æ –∫–Ω–∏–≥–∏
def add_book_reviews(connection, user_ids, book_ids):
    cursor = connection.cursor()
    review_count = 0

    try:
        # –î–æ–¥–∞—î–º–æ –≤—ñ–¥ 20 –¥–æ 40 –≤–∏–ø–∞–¥–∫–æ–≤–∏—Ö –≤—ñ–¥–≥—É–∫—ñ–≤
        for _ in range(random.randint(20, 40)):
            book_id = random.choice(book_ids)

            # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤–ª–∞—Å–Ω–∏–∫–∞ –∫–Ω–∏–≥–∏
            cursor.execute("SELECT owner_id FROM books WHERE id = %s", (book_id,))
            owner_id = cursor.fetchone()[0]

            # –û–±–∏—Ä–∞—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫–∏–π –Ω–µ —î –≤–ª–∞—Å–Ω–∏–∫–æ–º
            available_users = [user_id for user_id in user_ids if user_id != owner_id]
            if not available_users:
                continue

            user_id = random.choice(available_users)
            rating = random.randint(3, 5)  # –ë—ñ–ª—å—à–µ –ø–æ–∑–∏—Ç–∏–≤–Ω–∏—Ö –≤—ñ–¥–≥—É–∫—ñ–≤

            comments = [
                "–ß—É–¥–æ–≤–∞ –∫–Ω–∏–≥–∞! –†–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å—ñ–º.",
                "–û–¥–Ω–∞ –∑ –º–æ—ó—Ö —É–ª—é–±–ª–µ–Ω–∏—Ö –∫–Ω–∏–≥.",
                "–¶—ñ–∫–∞–≤–∏–π —Å—é–∂–µ—Ç, –∞–ª–µ —Ç—Ä–æ—Ö–∏ –∑–∞—Ç—è–≥–Ω—É—Ç–æ.",
                "–î—É–∂–µ —Å–ø–æ–¥–æ–±–∞–ª–∞—Å—å, –æ—Å–æ–±–ª–∏–≤–æ –≥–æ–ª–æ–≤–Ω–∏–π –≥–µ—Ä–æ–π.",
                "–ß–∏—Ç–∞—î—Ç—å—Å—è –ª–µ–≥–∫–æ, –æ—Ç—Ä–∏–º–∞–≤ –∑–∞–¥–æ–≤–æ–ª–µ–Ω–Ω—è.",
                "–ù–µ –º—ñ–≥ –≤—ñ–¥—ñ—Ä–≤–∞—Ç–∏—Å—è, –ø–æ–∫–∏ –Ω–µ –¥–æ—á–∏—Ç–∞–≤ –¥–æ –∫—ñ–Ω—Ü—è.",
                "–ì–∞—Ä–Ω–∏–π —Å—Ç–∏–ª—å –Ω–∞–ø–∏—Å–∞–Ω–Ω—è, —Ä–µ–∫–æ–º–µ–Ω–¥—É—é.",
                "–°–ø–æ–¥–æ–±–∞–ª–æ—Å—è, –∞–ª–µ –æ—á—ñ–∫—É–≤–∞–≤ –±—ñ–ª—å—à–æ–≥–æ.",
                "–î—É–∂–µ —Ü—ñ–∫–∞–≤–∞ –∫–Ω–∏–≥–∞ –∑ –Ω–µ–ø–µ—Ä–µ–¥–±–∞—á—É–≤–∞–Ω–∏–º —Ñ—ñ–Ω–∞–ª–æ–º.",
                "–í–∞—Ä—Ç–æ –ø—Ä–æ—á–∏—Ç–∞—Ç–∏ —Ö–æ—á–∞ –± —Ä–∞–∑ —É –∂–∏—Ç—Ç—ñ."
            ]
            comment = random.choice(comments)

            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –Ω–µ –∑–∞–ª–∏—à–∞–≤ —Ü–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ –≤—ñ–¥–≥—É–∫
            cursor.execute(
                "SELECT id FROM book_reviews WHERE book_id = %s AND user_id = %s",
                (book_id, user_id)
            )
            if cursor.fetchone():
                continue

            # –î–æ–¥–∞—î–º–æ –≤—ñ–¥–≥—É–∫
            cursor.execute(
                """INSERT INTO book_reviews 
                   (user_id, book_id, rating, comment) 
                   VALUES (%s, %s, %s, %s)""",
                (user_id, book_id, rating, comment)
            )
            review_count += 1

        # –û–Ω–æ–≤–ª—é—î–º–æ —Ä–µ–π—Ç–∏–Ω–≥–∏ –∫–Ω–∏–≥
        cursor.execute("""
            UPDATE books b 
            SET rating = (SELECT AVG(rating) FROM book_reviews WHERE book_id = b.id),
                rating_count = (SELECT COUNT(*) FROM book_reviews WHERE book_id = b.id)
            WHERE b.id IN (SELECT book_id FROM book_reviews GROUP BY book_id)
        """)

        connection.commit()
        print(f"–î–æ–¥–∞–Ω–æ {review_count} –≤—ñ–¥–≥—É–∫—ñ–≤ –ø—Ä–æ –∫–Ω–∏–≥–∏")
    except mysql.connector.Error as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –≤—ñ–¥–≥—É–∫—ñ–≤ –ø—Ä–æ –∫–Ω–∏–≥–∏: {e}")
        connection.rollback()
    finally:
        cursor.close()


# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –±–∞–∂–∞–Ω—å
def add_wishlist_items(connection, user_ids):
    cursor = connection.cursor()
    wishlist_count = 0

    try:
        # –ö–æ–∂–µ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–∞—î –≤—ñ–¥ 1 –¥–æ 5 –±–∞–∂–∞–Ω—å
        for user_id in user_ids:
            num_wishes = random.randint(1, 5)

            for _ in range(num_wishes):
                book = random.choice(books_data)
                title = book["title"]
                author = book["author"]
                genre_id = book["genre_id"]

                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ —î —Ç–∞–∫–µ –±–∞–∂–∞–Ω–Ω—è
                cursor.execute(
                    """SELECT id FROM wishlist 
                       WHERE user_id = %s AND title = %s AND author = %s""",
                    (user_id, title, author)
                )
                if cursor.fetchone():
                    continue

                # –î–æ–¥–∞—î–º–æ –±–∞–∂–∞–Ω–Ω—è
                cursor.execute(
                    """INSERT INTO wishlist 
                       (user_id, title, author, genre_id) 
                       VALUES (%s, %s, %s, %s)""",
                    (user_id, title, author, genre_id)
                )
                wishlist_count += 1

        connection.commit()
        print(f"–î–æ–¥–∞–Ω–æ {wishlist_count} –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —Å–ø–∏—Å–∫—É –±–∞–∂–∞–Ω–æ–≥–æ")
    except mysql.connector.Error as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ —Å–ø–∏—Å–∫—É –±–∞–∂–∞–Ω–æ–≥–æ: {e}")
        connection.rollback()
    finally:
        cursor.close()


# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –æ–±–º—ñ–Ω—ñ–≤
def add_exchanges(connection, user_ids, book_ids):
    cursor = connection.cursor()
    exchange_count = 0

    exchange_ids = []

    try:
        # –î–æ–¥–∞—î–º–æ –≤—ñ–¥ 10 –¥–æ 15 –≤–∏–ø–∞–¥–∫–æ–≤–∏—Ö –æ–±–º—ñ–Ω—ñ–≤
        for _ in range(random.randint(10, 15)):
            # –û–±–∏—Ä–∞—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤—É –∫–Ω–∏–≥—É
            book_id = random.choice(book_ids)

            # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤–ª–∞—Å–Ω–∏–∫–∞ –∫–Ω–∏–≥–∏
            cursor.execute("SELECT owner_id, status FROM books WHERE id = %s", (book_id,))
            result = cursor.fetchone()
            owner_id, status = result

            # –Ø–∫—â–æ –∫–Ω–∏–≥–∞ –≤–∂–µ –≤–∏–¥–∞–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ
            if status == "–ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞":
                continue

            # –û–±–∏—Ä–∞—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –ø–æ–∑–∏—á–∞–ª—å–Ω–∏–∫–∞, —è–∫–∏–π –Ω–µ —î –≤–ª–∞—Å–Ω–∏–∫–æ–º
            available_users = [user_id for user_id in user_ids if user_id != owner_id]
            if not available_users:
                continue

            borrower_id = random.choice(available_users)

            # –û–±–∏—Ä–∞—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π —Å—Ç–∞—Ç—É—Å –æ–±–º—ñ–Ω—É
            exchange_status_options = ["–∑–∞–ø–∏—Ç", "–ø—Ä–∏–π–Ω—è—Ç–æ", "–≤—ñ–¥—Ö–∏–ª–µ–Ω–æ", "–æ—Ç—Ä–∏–º–∞–Ω–æ"]
            exchange_status = random.choice(exchange_status_options)

            # –í–∏–∑–Ω–∞—á–∞—î–º–æ –¥–∞—Ç–∏
            start_date = datetime.now() - timedelta(days=random.randint(1, 30))
            end_date = None
            if exchange_status == "–æ—Ç—Ä–∏–º–∞–Ω–æ":
                end_date = start_date + timedelta(days=random.randint(5, 15))

            # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å –∫–Ω–∏–≥–∏ –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Å—Ç–∞—Ç—É—Å—É –æ–±–º—ñ–Ω—É
            book_status = "–¥–æ—Å—Ç—É–ø–Ω–∞"
            if exchange_status == "–∑–∞–ø–∏—Ç":
                book_status = "–∑–∞—Ä–µ–∑–µ—Ä–≤–æ–≤–∞–Ω–∞"
            elif exchange_status == "–ø—Ä–∏–π–Ω—è—Ç–æ":
                book_status = "–ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞"

            cursor.execute(
                "UPDATE books SET status = %s WHERE id = %s",
                (book_status, book_id)
            )

            # –î–æ–¥–∞—î–º–æ –æ–±–º—ñ–Ω
            if end_date:
                cursor.execute(
                    """INSERT INTO exchanges 
                       (book_id, borrower_id, status, start_date, end_date) 
                       VALUES (%s, %s, %s, %s, %s)""",
                    (book_id, borrower_id, exchange_status, start_date, end_date)
                )
            else:
                cursor.execute(
                    """INSERT INTO exchanges 
                       (book_id, borrower_id, status, start_date) 
                       VALUES (%s, %s, %s, %s)""",
                    (book_id, borrower_id, exchange_status, start_date)
                )

            exchange_id = cursor.lastrowid
            exchange_ids.append((exchange_id, owner_id, borrower_id, exchange_status))
            exchange_count += 1

        connection.commit()
        print(f"–î–æ–¥–∞–Ω–æ {exchange_count} –æ–±–º—ñ–Ω—ñ–≤")
        return exchange_ids
    except mysql.connector.Error as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –æ–±–º—ñ–Ω—ñ–≤: {e}")
        connection.rollback()
        return []
    finally:
        cursor.close()


# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
def add_messages(connection, exchange_data):
    cursor = connection.cursor()
    message_count = 0

    try:
        for exchange_id, owner_id, borrower_id, status in exchange_data:
            # –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ —Å—Ç–∞—Ç—É—Å—É –æ–±–º—ñ–Ω—É
            if status == "–∑–∞–ø–∏—Ç":
                message_count_range = (1, 3)
            elif status == "–ø—Ä–∏–π–Ω—è—Ç–æ":
                message_count_range = (2, 5)
            elif status == "–≤—ñ–¥—Ö–∏–ª–µ–Ω–æ":
                message_count_range = (1, 2)
            else:  # –ø–æ–≤–µ—Ä–Ω—É—Ç–æ
                message_count_range = (3, 7)

            num_messages = random.randint(*message_count_range)

            for i in range(num_messages):
                # –í–∏–∑–Ω–∞—á–∞—î–º–æ –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫–∞ —ñ –æ—Ç—Ä–∏–º—É–≤–∞—á–∞
                if i % 2 == 0:
                    sender_id = borrower_id
                    receiver_id = owner_id
                else:
                    sender_id = owner_id
                    receiver_id = borrower_id

                # –¢–µ–∫—Å—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑–∞–ª–µ–∂–∞—Ç—å –≤—ñ–¥ —Å—Ç–∞—Ç—É—Å—É —ñ –Ω–æ–º–µ—Ä–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                if status == "–∑–∞–ø–∏—Ç":
                    messages = [
                        "–î–æ–±—Ä–æ–≥–æ –¥–Ω—è! –ú–µ–Ω–µ —Ü—ñ–∫–∞–≤–∏—Ç—å –≤–∞—à–∞ –∫–Ω–∏–≥–∞. –ß–∏ –º–æ–∂–Ω–∞ —ó—ó –ø–æ–∑–∏—á–∏—Ç–∏?",
                        "–¢–∞–∫, –∑–≤–∏—á–∞–π–Ω–æ. –ö–æ–ª–∏ –≤–∞–º –∑—Ä—É—á–Ω–æ –∑—É—Å—Ç—Ä—ñ—Ç–∏—Å—è?",
                        "–ú–æ–∂–µ –≤ —Å–µ—Ä–µ–¥—É –ø—ñ—Å–ª—è –æ–±—ñ–¥—É?"
                    ]
                elif status == "–ø—Ä–∏–π–Ω—è—Ç–æ":
                    messages = [
                        "–î—è–∫—É—é, —â–æ –ø–æ–≥–æ–¥–∏–ª–∏—Å—å –¥–∞—Ç–∏ –∫–Ω–∏–≥—É!",
                        "–ù–µ–º–∞ –∑–∞ —â–æ. –°–ø–æ–¥—ñ–≤–∞—é—Å—è, –≤–æ–Ω–∞ –≤–∞–º —Å–ø–æ–¥–æ–±–∞—î—Ç—å—Å—è.",
                        "–ö–æ–ª–∏ –ø–ª–∞–Ω—É—î—Ç—å—Å—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è?",
                        "–î–µ—Å—å —á–µ—Ä–µ–∑ –¥–≤–∞ —Ç–∏–∂–Ω—ñ, —è–∫—â–æ –≤–∞–º –ø—ñ–¥—Ö–æ–¥–∏—Ç—å.",
                        "–¢–∞–∫, —Ü—ñ–ª–∫–æ–º. –ü—Ä–∏—î–º–Ω–æ–≥–æ —á–∏—Ç–∞–Ω–Ω—è!"
                    ]
                elif status == "–≤—ñ–¥—Ö–∏–ª–µ–Ω–æ":
                    messages = [
                        "–ù–∞ –∂–∞–ª—å, –Ω–µ –º–æ–∂—É –¥–∞—Ç–∏ –∫–Ω–∏–≥—É –∑–∞—Ä–∞–∑.",
                        "–†–æ–∑—É–º—ñ—é, –¥—è–∫—É—é –∑–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å."
                    ]
                else:  # –ø–æ–≤–µ—Ä–Ω—É—Ç–æ
                    messages = [
                        "–•–æ—Ç—ñ–≤ –±–∏ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –∫–Ω–∏–≥—É. –ö–æ–ª–∏ –≤–∞–º –∑—Ä—É—á–Ω–æ?",
                        "–ó–∞–≤—Ç—Ä–∞ –ø—ñ—Å–ª—è —Ä–æ–±–æ—Ç–∏ –ø—ñ–¥—ñ–π–¥–µ.",
                        "–ß—É–¥–æ–≤–æ, —Ç–æ–¥—ñ –¥–æ –∑–∞–≤—Ç—Ä–∞!",
                        "–ö–Ω–∏–≥–∞ —Å–ø–æ–¥–æ–±–∞–ª–∞—Å—å?",
                        "–¢–∞–∫, –¥—É–∂–µ! –û—Å–æ–±–ª–∏–≤–æ —Å–ø–æ–¥–æ–±–∞–≤—Å—è –≥–æ–ª–æ–≤–Ω–∏–π –≥–µ—Ä–æ–π.",
                        "–†–∞–¥–∏–π, —â–æ –≤–∞–º —Å–ø–æ–¥–æ–±–∞–ª–æ—Å—å. –Ñ —â–µ –∫—ñ–ª—å–∫–∞ –ø–æ–¥—ñ–±–Ω–∏—Ö –∫–Ω–∏–≥, —è–∫—â–æ —Ü—ñ–∫–∞–≤–æ.",
                        "–û–±–æ–≤'—è–∑–∫–æ–≤–æ –≥–ª—è–Ω—É. –î—è–∫—É—é –∑–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—é!"
                    ]

                # –û–±–∏—Ä–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ –Ω–æ–º–µ—Ä–∞
                if i < len(messages):
                    message_text = messages[i]
                else:
                    message_texts = [
                        "–î—è–∫—É—é –∑–∞ —Å–ø—ñ–≤–ø—Ä–∞—Ü—é!",
                        "–ó–∞–≤–∂–¥–∏ —Ä–∞–¥–∏–π –¥–æ–ø–æ–º–æ–≥—Ç–∏.",
                        "–ß–∏ —î —É –≤–∞—Å —â–µ —Ü—ñ–∫–∞–≤—ñ –∫–Ω–∏–≥–∏?",
                        "–¢–∞–∫, –º–∞—é –∫—ñ–ª—å–∫–∞. –ü–æ–¥–∏–≤—ñ—Ç—å—Å—è –º—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å.",
                        "–û–±–æ–≤'—è–∑–∫–æ–≤–æ –ø–æ–¥–∏–≤–ª—é—Å—å."
                    ]
                    message_text = random.choice(message_texts)

                # –ß–∞—Å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                message_time = datetime.now() - timedelta(days=random.randint(1, 20),
                                                          hours=random.randint(0, 23),
                                                          minutes=random.randint(0, 59))

                # –°—Ç–∞—Ç—É—Å –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—è
                is_read = random.choice([True, True, True, False])  # 75% –ø—Ä–æ—á–∏—Ç–∞–Ω–∏—Ö

                # –î–æ–¥–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                cursor.execute(
                    """INSERT INTO messages 
                       (sender_id, receiver_id, content, is_read, created_at) 
                       VALUES (%s, %s, %s, %s, %s)""",
                    (sender_id, receiver_id, message_text, is_read, message_time)
                )
                message_count += 1

        connection.commit()
        print(f"–î–æ–¥–∞–Ω–æ {message_count} –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å")
    except mysql.connector.Error as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å: {e}")
        connection.rollback()
    finally:
        cursor.close()


# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤—ñ–¥–≥—É–∫—ñ–≤ –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
def add_user_reviews(connection, exchange_data):
    cursor = connection.cursor()
    review_count = 0

    try:
        for _, owner_id, borrower_id, status in exchange_data:
            if status != "–æ—Ç—Ä–∏–º–∞–Ω–æ":
                continue  # –í—ñ–¥–≥—É–∫–∏ –º–æ–∂–Ω–∞ –∑–∞–ª–∏—à–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –æ–±–º—ñ–Ω—É

            # –í–∏–∑–Ω–∞—á–∞—î–º–æ, —Ö—Ç–æ –∫–æ–º—É –∑–∞–ª–∏—à–∞—î –≤—ñ–¥–≥—É–∫ (–≤–ª–∞—Å–Ω–∏–∫ –ø–æ–∑–∏—á–∞–ª—å–Ω–∏–∫—É —ñ –Ω–∞–≤–ø–∞–∫–∏)
            review_pairs = [(owner_id, borrower_id), (borrower_id, owner_id)]

            for reviewer_id, user_id in review_pairs:
                # –í–∏—Ä—ñ—à—É—î–º–æ, —á–∏ –∑–∞–ª–∏—à–∞—Ç–∏ –≤—ñ–¥–≥—É–∫ (80% –π–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å)
                if random.random() > 0.8:
                    continue

                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –Ω–µ –∑–∞–ª–∏—à–∞–≤ –≤–∂–µ –≤—ñ–¥–≥—É–∫
                cursor.execute(
                    "SELECT id FROM user_reviews WHERE reviewer_id = %s AND user_id = %s",
                    (reviewer_id, user_id)
                )
                if cursor.fetchone():
                    continue

                # –û–±–∏—Ä–∞—î–º–æ —Ä–µ–π—Ç–∏–Ω–≥ (–±—ñ–ª—å—à–µ –≤–∏—Å–æ–∫–∏—Ö –æ—Ü—ñ–Ω–æ–∫)
                rating = random.randint(4, 5) if random.random() < 0.8 else random.randint(1, 3)

                # –û–±–∏—Ä–∞—î–º–æ –∫–æ–º–µ–Ω—Ç–∞—Ä
                positive_comments = [
                    "–ß—É–¥–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á, –≤—Å–µ –ø—Ä–æ–π—à–ª–æ –≥–ª–∞–¥–∫–æ.",
                    "–î—É–∂–µ –ø—É–Ω–∫—Ç—É–∞–ª—å–Ω–∞ —ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–∞ –ª—é–¥–∏–Ω–∞.",
                    "–†–µ–∫–æ–º–µ–Ω–¥—É—é! –ö–Ω–∏–≥—É –ø–æ–≤–µ—Ä–Ω—É–≤ –≤—á–∞—Å–Ω–æ —ñ –≤ –≥–∞—Ä–Ω–æ–º—É —Å—Ç–∞–Ω—ñ.",
                    "–ü—Ä–∏—î–º–Ω–æ –º–∞—Ç–∏ —Å–ø—Ä–∞–≤—É –∑ —Ç–∞–∫–∏–º–∏ –ª—é–¥—å–º–∏.",
                    "–í—Å–µ –≤—ñ–¥–º—ñ–Ω–Ω–æ, –æ–±–æ–≤'—è–∑–∫–æ–≤–æ —Å–ø—ñ–≤–ø—Ä–∞—Ü—é–≤–∞—Ç–∏–º—É —â–µ.",
                    "–î—è–∫—É—é –∑–∞ —Ö–æ—Ä–æ—à–∏–π –æ–±–º—ñ–Ω!"
                ]

                neutral_comments = [
                    "–ù–æ—Ä–º–∞–ª—å–Ω–∏–π –æ–±–º—ñ–Ω, –±–µ–∑ –ø—Ä–æ–±–ª–µ–º.",
                    "–í—Å–µ –≤—ñ–¥–±—É–ª–æ—Å—è –∑–∞ –¥–æ–º–æ–≤–ª–µ–Ω—ñ—Å—Ç—é.",
                    "–ó–∞–≥–∞–ª–æ–º –≤—Å–µ –¥–æ–±—Ä–µ.",
                    "–ö–Ω–∏–≥—É –ø–æ–≤–µ—Ä–Ω—É–≤, —Ö–æ—á–∞ —Ç—Ä–æ—Ö–∏ –ø—ñ–∑–Ω—ñ—à–µ –¥–æ–º–æ–≤–ª–µ–Ω–æ–≥–æ —Ç–µ—Ä–º—ñ–Ω—É."
                ]

                negative_comments = [
                    "–ù–∞ –∂–∞–ª—å, –∫–Ω–∏–≥—É –ø–æ–≤–µ—Ä–Ω—É–≤ —ñ–∑ –∑–∞–ø—ñ–∑–Ω–µ–Ω–Ω—è–º.",
                    "–ö–Ω–∏–≥–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∞ –≤ –Ω–µ –Ω–∞–π–∫—Ä–∞—â–æ–º—É —Å—Ç–∞–Ω—ñ.",
                    "–°–∫–ª–∞–¥–Ω–æ –±—É–ª–æ –¥–æ–º–æ–≤–∏—Ç–∏—Å—è –ø—Ä–æ —á–∞—Å –∑—É—Å—Ç—Ä—ñ—á—ñ.",
                    "–ö–æ–º—É–Ω—ñ–∫–∞—Ü—ñ—è –º–æ–≥–ª–∞ –±—É—Ç–∏ –∫—Ä–∞—â–æ—é."
                ]

                if rating >= 4:
                    comment = random.choice(positive_comments)
                elif rating == 3:
                    comment = random.choice(neutral_comments)
                else:
                    comment = random.choice(negative_comments)

                # –î–æ–¥–∞—î–º–æ –≤—ñ–¥–≥—É–∫
                cursor.execute(
                    """INSERT INTO user_reviews 
                       (reviewer_id, user_id, rating, comment) 
                       VALUES (%s, %s, %s, %s)""",
                    (reviewer_id, user_id, rating, comment)
                )
                review_count += 1

        # –û–Ω–æ–≤–ª—é—î–º–æ —Ä–µ–π—Ç–∏–Ω–≥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
        cursor.execute("""
            UPDATE users u 
            SET rating = (SELECT AVG(rating) FROM user_reviews WHERE user_id = u.id),
                rating_count = (SELECT COUNT(*) FROM user_reviews WHERE user_id = u.id)
            WHERE u.id IN (SELECT user_id FROM user_reviews GROUP BY user_id)
        """)

        connection.commit()
        print(f"–î–æ–¥–∞–Ω–æ {review_count} –≤—ñ–¥–≥—É–∫—ñ–≤ –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤")
    except mysql.connector.Error as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –≤—ñ–¥–≥—É–∫—ñ–≤ –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {e}")
        connection.rollback()
    finally:
        cursor.close()


# –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
def main():
    connection = connect_to_db()
    if not connection:
        return

    try:
        print("–ó–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —Ç–µ—Å—Ç–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏...")
        user_ids = add_users(connection)
        if not user_ids:
            return

        book_ids = add_books(connection, user_ids)
        if not book_ids:
            return

        add_book_reviews(connection, user_ids, book_ids)
        add_wishlist_items(connection, user_ids)

        exchange_data = add_exchanges(connection, user_ids, book_ids)
        if exchange_data:
            add_messages(connection, exchange_data)
            add_user_reviews(connection, exchange_data)

        print("–ó–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—ñ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö: {e}")
    finally:
        connection.close()


if __name__ == "__main__":
    main()